rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user documents
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Jobs collection
    match /jobs/{jobId} {
      // Anyone can read jobs
      allow read: if true;
      // Only authenticated users can create jobs
      allow create: if request.auth != null;
      // Only job owner can update/delete
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.clientId;
    }
    
    // Professionals collection
    match /professionals/{professionalId} {
      // Anyone can read professional profiles
      allow read: if true;
      // Only authenticated users can create profiles
      allow create: if request.auth != null;
      // Only profile owner can update/delete
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Proposals collection
    match /proposals/{proposalId} {
      // Users can read proposals for their jobs or their own proposals
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.professionalId ||
        // Check if user owns the job (need to get job document)
        get(/databases/$(database)/documents/jobs/$(resource.data.jobId)).data.clientId == request.auth.uid
      );
      // Only authenticated users can create proposals
      allow create: if request.auth != null;
      // Only proposal owner or job owner can update
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.professionalId ||
        get(/databases/$(database)/documents/jobs/$(resource.data.jobId)).data.clientId == request.auth.uid
      );
      // Only proposal owner can delete
      allow delete: if request.auth != null && request.auth.uid == resource.data.professionalId;
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      // Users can only read their own notifications
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      // System can create notifications (server-side)
      allow create: if request.auth != null;
      // Users can update their own notifications (mark as read)
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      // Users can delete their own notifications
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Reviews collection
    match /reviews/{reviewId} {
      // Anyone can read reviews
      allow read: if true;
      // Only authenticated users can create reviews
      allow create: if request.auth != null && request.auth.uid == request.resource.data.clientId;
      // Only review author can update/delete their review
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.clientId;
    }
  }
}
